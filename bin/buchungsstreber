#!/usr/bin/env ruby

require 'thor'

require 'buchungsstreber'

module Buchungsstreber
  class CLI < Thor
    desc 'watch [file]', 'watch file for changes'
    def watch(file = nil)
      puts "Hello #{file}"
    end

    desc 'execute [file]', 'Handle a file'
    method_options config: :string, aliases: '-c', required: false
    method_options debug: :boolean, aliases: '-d', required: false, lazy_default: true
    def execute(file = nil)
      e = Executor.new(file, options[:config])

      e.print_title
      e.show_overview
      if e.valid? and e.actualize?
        e.save_entries
        e.archive
      end
    rescue Exception => e
      puts pretty_error(e, options[:debug])
    end
    default_task :execute

    desc 'version', 'Prints the version'
    def version
      puts Buchungsstreber::VERSION
    end

    private

    def pretty_error(e, debug = false)
      if !debug
        e.class.name + ': ' + e.message[0..80]
      else
        msg = ['']
        msg << [e.class.name + ': ' + e.message]
        msg << e.backtrace.select { |x| x =~ /lib\/buchungsstreber\// }.map { |x| "  " + x }
        msg << '  ...'
        msg.join("\n")
      end
    end
  end
end

Buchungsstreber::CLI.start(ARGV)
